# AnÃ¡lise e AutomaÃ§Ã£o de Vendas de um E-commerce Brasileiro

Este projeto simula um ambiente completo de **anÃ¡lise e automaÃ§Ã£o de dados** para um e-commerce fictÃ­cio, desenvolvido em **Python**, **SQL** e **Power BI**.

O objetivo Ã© demonstrar, de forma prÃ¡tica e realista, o ciclo completo de trabalho de um Analista de Dados â€” da criaÃ§Ã£o do banco relacional Ã  geraÃ§Ã£o automatizada de relatÃ³rios e dashboards.

## Objetivo do Projeto

O projeto tem como objetivo construir um **pipeline de dados completo**, cobrindo todas as etapas do ciclo analÃ­tico:

1. **GeraÃ§Ã£o e modelagem dos dados** â€” criaÃ§Ã£o de um banco relacional com dados sintÃ©ticos realistas.  
2. **TransformaÃ§Ã£o e anÃ¡lise exploratÃ³ria** â€” integraÃ§Ã£o de consultas SQL e manipulaÃ§Ã£o com Pandas.  
3. **AutomaÃ§Ã£o do processo** â€” exportaÃ§Ã£o automÃ¡tica de relatÃ³rios e logs.  
4. **IntegraÃ§Ã£o com Business Intelligence (BI)** â€” visualizaÃ§Ã£o e acompanhamento de KPIs no Power BI.

Esse fluxo representa o processo real de um analista de dados corporativo:  
coleta, limpeza, anÃ¡lise, visualizaÃ§Ã£o e automaÃ§Ã£o de insights.

## Estrutura do Projeto

```text
ecommerce-data-analytics/
â”‚
â”œâ”€â”€ data/                            â†’ Banco de dados relacional (SQLite)
â”‚   â”œâ”€â”€ ecommerce_realista.db        â†’ Base principal de dados
â”‚   â””â”€â”€ data_export/                 â†’ RelatÃ³rios e exportaÃ§Ãµes automÃ¡ticas (.csv)
â”‚
â”œâ”€â”€ imagens/                         â†’ GrÃ¡ficos gerados nas anÃ¡lises exploratÃ³rias
â”‚   â”œâ”€â”€ faturamento_canais.png
â”‚   â”œâ”€â”€ faturamento_categorias.png
â”‚   â”œâ”€â”€ produtos_mais_vendidos.png
â”‚   â”œâ”€â”€ produtos_maior_faturamento.png
â”‚   â”œâ”€â”€ clientes_top10.png
â”‚   â””â”€â”€ clientes_pareto.png
â”‚
â”œâ”€â”€ notebooks/                       â†’ Notebooks Jupyter com as etapas do pipeline
â”‚   â”œâ”€â”€ 01_geracao_dados.ipynb       â†’ Etapa 1 â€” geraÃ§Ã£o e modelagem de dados
â”‚   â”œâ”€â”€ 02_transformacao_analise_ecommerce.ipynb  â†’ Etapa 2 â€” exploraÃ§Ã£o e anÃ¡lise
â”‚   â””â”€â”€ 03_automacao_ecommerce.ipynb â†’ Etapa 3 â€” automaÃ§Ã£o e integraÃ§Ã£o com Power BI
â”‚
â”œâ”€â”€ scripts/                         â†’ Scripts Python independentes
â”‚   â””â”€â”€ automacao_ecommerce.py       â†’ Script principal de automaÃ§Ã£o modular
â”‚
â”œâ”€â”€ requirements.txt                 â†’ Lista de dependÃªncias do projeto
â”œâ”€â”€ .gitignore                       â†’ Arquivos e pastas ignorados no versionamento
â””â”€â”€ README.md                        â†’ DocumentaÃ§Ã£o completa do projeto


```

## Tecnologias Utilizadas

- **Linguagem:** Python  
- **Bibliotecas:** **Pandas**, **NumPy**, **Faker**, **Matplotlib**, **Seaborn**  
- **Banco de Dados:** SQLite  
- **VisualizaÃ§Ã£o e Business Intelligence:** Power BI  
- **Ambiente de Desenvolvimento:** VS Code  
- **Controle de VersÃ£o:** Git e GitHub

## Etapas do Projeto

O projeto adota uma arquitetura de **pipeline ELT (Extract, Load, Transform)**, desenvolvida em Python e integrada a um banco de dados relacional SQLite.

Cada etapa representa uma fase do processo analÃ­tico â€” da criaÃ§Ã£o dos dados atÃ© a automaÃ§Ã£o e integraÃ§Ã£o com Business Intelligence.

### 01 - GeraÃ§Ã£o e Carga de Dados (E + L)
CriaÃ§Ã£o de dados sintÃ©ticos realistas utilizando **Faker** e **NumPy**, seguidos da carga automatizada no banco `ecommerce_realista.db`.

**Status:** ConcluÃ­do âœ…

---

### 02 - TransformaÃ§Ã£o e AnÃ¡lise (T)
IntegraÃ§Ã£o de consultas **SQL** e manipulaÃ§Ãµes com **Pandas**, permitindo compreender o comportamento de compra dos clientes, o desempenho das categorias e o equilÃ­brio entre os canais de venda.

**Principais indicadores:**
- Faturamento total: R$ 5,87 milhÃµes  
- Ticket mÃ©dio: R$ 210,50  
- Canais equilibrados entre loja fÃ­sica e e-commerce  
- Efeito Pareto (20% dos clientes â†’ 80% da receita)

**Status:** ConcluÃ­do âœ…

---

### 03 - AutomaÃ§Ã£o e Power BI
AutomaÃ§Ã£o completa da extraÃ§Ã£o, transformaÃ§Ã£o e exportaÃ§Ã£o dos relatÃ³rios, com versionamento automÃ¡tico por data e registro de logs.

IntegraÃ§Ã£o planejada com **Power BI** para criaÃ§Ã£o de dashboards interativos e acompanhamento de KPIs em tempo real.

**Status:** Em andamento ğŸ”„

## ExecuÃ§Ã£o Local

### Requisitos

- **Python:** VersÃ£o 3.10 ou superior  
- **DependÃªncias:** Listadas no arquivo `requirements.txt`

---

### InstalaÃ§Ã£o

No terminal, dentro da pasta do projeto:

```bash
pip install -r requirements.txt

ExecuÃ§Ã£o:

ApÃ³s a instalaÃ§Ã£o, execute o script principal:
python automacao_ecommerce.py

SaÃ­da esperada no terminal:
Iniciando automaÃ§Ã£o de dados...
Processo concluÃ­do com sucesso! Ticket mÃ©dio: R$ 392.42

Os arquivos CSV e logs serÃ£o gerados automaticamente na pasta:
data_export/
â”œâ”€â”€ vendas_detalhadas_YYYY-MM-DD.csv
â”œâ”€â”€ resumo_categorias_YYYY-MM-DD.csv
â”œâ”€â”€ resumo_clientes_YYYY-MM-DD.csv
â””â”€â”€ log_execucao.txt

ExecuÃ§Ã£o via Notebook:

TambÃ©m Ã© possÃ­vel rodar o processo dentro do Jupyter Notebook:
notebooks/03_automacao_ecommerce.ipynb
Basta executar todas as cÃ©lulas na sequÃªncia.
```
## Autor

**Gustavo de Paula Silva**  
Analista de Dados | PÃ³s-graduaÃ§Ã£o em EstatÃ­stica para CiÃªncia de Dados â€” PUC Minas  
E-mail: gdepaulasilva966@gmail.com  
GitHub: [@gustavogit4](https://github.com/gustavogit4)

---

## VersÃ£o

**VersÃ£o atual:** 1.1.0 â€” AutomaÃ§Ã£o modular com docstrings e logging estruturado  
**Ãšltima atualizaÃ§Ã£o:** 26/10/2025